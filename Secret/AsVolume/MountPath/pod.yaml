# See https://awsmorocco.com/lessons-learned-from-mounting-secrets-to-pods-on-kubernetes-ac0bbe8bd2ae
# Unlike environment variables, secrets mounted as volumes support dynamic updates without requiring a pod restart.
# The application can detect changes in the mounted files and use the updated data without downtime.

# To test it
# kubectl exec -it my-pod -- sh
# Do
# cat /etc/secrets/username
# cat /etc/secrets/password

# File contents are myuser and mypassword

apiVersion: v1
kind: Secret
metadata:
  name: mydatabase-secret
type: Opaque
data:
  username: bXl1c2Vy          # myuser in base64
  password: bXlwYXNzd29yZA==  # mypassword in base64
---
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
    - name: my-container
      image: alpine:latest
      imagePullPolicy: IfNotPresent
      command: [ "sh", "-c", "tail -f /dev/null" ]
      volumeMounts:
        - name: secret-volume
          # Refers to the base path within the container where the entire content of the secret is mounted.
          # Any change to the secret is automatically reflected in the volume after a short delay (60â€“90 seconds), and applications can access the updated information without requiring a pod restart.
          mountPath: /etc/secrets
          readOnly: true
  volumes:
    - name: secret-volume
      secret:
        secretName: mydatabase-secret
