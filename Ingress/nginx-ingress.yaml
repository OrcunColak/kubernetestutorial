# Install ingress
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

# kubectl apply -f nginx-ingress.yaml

# kubectl get pods -n ingress-nginx
# kubectl get networkpolicy

# Undeploy
# kubectl delete ingress nginx-ingress
# kubectl delete deployment nginx-deployment
# kubectl delete service nginx-service
# kubectl delete networkpolicy allow-nginx-traffic

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: localhost
      http:
        paths:
          - path: /nginx
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-nginx-traffic
  namespace: default  # Change this if your Nginx service is in another namespace
spec:
  podSelector:
    matchLabels:
      app: nginx  # This should match the label of your Nginx pods
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector: {}  # Allows traffic from any pod within the same namespace
      ports:
        - protocol: TCP
          port: 80
  egress:
    - to:
        - podSelector: {}  # Allows traffic to any pod within the same namespace
      ports:
        - protocol: TCP
          port: 80

